name: ToDo App CI
'on':
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  build-and-test:
    name: Build & Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Test backend and frontend
        uses: actions/setup-node@v2
        with:
          node-version: '14'
      - run: cd ./backend && npm install && npm test
      - run: cd ./frontend && npm install && npm test
      - name: Cypress run
        uses: cypress-io/github-action@v2
        with:
          working-directory: ./frontend
          build: npm run build
          start: npm start
  deploy-to-dockerhub:
    name: Build & Push
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: '${{ runner.os }}-buildx-${{ github.sha }}'
          restore-keys: |
            ${{ runner.os }}-buildx-
      - uses: docker/login-action@v1
        with:
          username: '${{ secrets.DOCKER_USERNAME }}'
          password: '${{ secrets.DOCKER_PASSWORD }}'
          logout: true
      - name: Build and push backend
        uses: docker/build-push-action@v2
        with:
          context: ./backend
          file: ./backend/Dockerfile
          builder: '${{ steps.buildx.outputs.name }}'
          push: true
          tags: '${{ secrets.DOCKER_USERNAME }}/todo-backend:latest'
          cache-from: 'type=local,src=/tmp/.buildx-cache'
          cache-to: 'type=local,dest=/tmp/.buildx-cache-new'
      - name: Image digest
        run: 'echo ${{ steps.docker_build.outputs.digest }}'
      - name: Build and push frontend
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          builder: '${{ steps.buildx.outputs.name }}'
          push: true
          tags: '${{ secrets.DOCKER_USERNAME }}/todofrontend:latest'
          cache-from: 'type=local,src=/tmp/.buildx-cache'
          cache-to: 'type=local,dest=/tmp/.buildx-cache'
      - name: Image digest
        run: 'echo ${{ steps.docker_build.outputs.digest }}'
